plugins {
	id 'fabric-loom' version "${loom_version}"
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
	mavenCentral()
	// Repositorio espejo que contiene las dependencias de Cobblemon y otros mods
	maven {
		url = "https://maven.impactdev.net/repository/development/"
	}
	// Repositorio de CurseMaven para dependencias como Xaero's Minimap
	maven {
		url "https://cursemaven.com"
	}
	// Los repositorios originales de Cobblemon y Xaero se comentan porque
	// el espejo de impactdev ya los contiene y así evitamos los errores
	// de 'Unknown host' en tu red.
}

loom {
	splitEnvironmentSourceSets() // Esto es suficiente para separar cliente y servidor.
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// --- Dependencias del Mod ---
	// Se usa 'modImplementation' con 'include' para asegurar que el JAR de Cobblemon
	// esté disponible para la compilación, los mixins y el entorno de desarrollo.
	modImplementation("com.cobblemon:fabric:1.6.1+1.21.1")

	// Añadimos la biblioteca de Kotlin para que nuestro mod sea compatible con Cobblemon
	modImplementation "net.fabricmc:fabric-language-kotlin:1.12.3+kotlin.2.0.21"

	// Kyori Adventure para un manejo de texto avanzado y ClickEvents robustos.
	// Usamos 'modApi' para exponer la API de Adventure a nuestro mod y 'include' para
	// empaquetarla, ya que es una dependencia pequeña y crucial que no siempre está
	// presente en todos los modpacks. Esto resuelve el crasheo.
	modApi(include("net.kyori:adventure-platform-fabric:5.14.1"))

}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": inputs.properties.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

jar {
	inputs.property "archivesName", project.base.archivesName

	from("LICENSE") {
		rename { "${it}_${inputs.properties.archivesName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}



// --- Tarea Personalizada para Copiar el Mod al Entorno de Pruebas ---
// Esta tarea se ejecutará después de que 'build' termine.
task copyModToTestEnvironment(type: Copy) {
    // Define la ruta de la carpeta de mods de tu instancia de CurseForge.
    def modsDir = "C:/Users/JOHN/curseforge/minecraft/Instances/COBBLEVERSE - Pokemon Adventure [Cobblemon]/mods"

    // Le decimos que copie el resultado de la tarea 'remapJar'.
    // Este es el .jar final que no tiene el sufijo '-dev'.
    from remapJar
    into modsDir
}

// Hacemos que la tarea 'build' ejecute nuestra tarea de copia al finalizar.
build.finalizedBy(copyModToTestEnvironment)
